// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Tarea7_Vacunas.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 8 "C:\Users\alane\OneDrive\Documentos\Clases Semestre 5\Programacion III\Tarea 7\code\Tarea7-Vacunas\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\alane\OneDrive\Documentos\Clases Semestre 5\Programacion III\Tarea 7\code\Tarea7-Vacunas\_Imports.razor"
using Tarea7_Vacunas;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\alane\OneDrive\Documentos\Clases Semestre 5\Programacion III\Tarea 7\code\Tarea7-Vacunas\_Imports.razor"
using Tarea7_Vacunas.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\alane\OneDrive\Documentos\Clases Semestre 5\Programacion III\Tarea 7\code\Tarea7-Vacunas\Pages\Registrar.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\alane\OneDrive\Documentos\Clases Semestre 5\Programacion III\Tarea 7\code\Tarea7-Vacunas\Pages\Registrar.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\alane\OneDrive\Documentos\Clases Semestre 5\Programacion III\Tarea 7\code\Tarea7-Vacunas\Pages\Registrar.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\alane\OneDrive\Documentos\Clases Semestre 5\Programacion III\Tarea 7\code\Tarea7-Vacunas\Pages\Registrar.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\alane\OneDrive\Documentos\Clases Semestre 5\Programacion III\Tarea 7\code\Tarea7-Vacunas\Pages\Registrar.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\alane\OneDrive\Documentos\Clases Semestre 5\Programacion III\Tarea 7\code\Tarea7-Vacunas\Pages\Registrar.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\alane\OneDrive\Documentos\Clases Semestre 5\Programacion III\Tarea 7\code\Tarea7-Vacunas\Pages\Registrar.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\alane\OneDrive\Documentos\Clases Semestre 5\Programacion III\Tarea 7\code\Tarea7-Vacunas\Pages\Registrar.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\alane\OneDrive\Documentos\Clases Semestre 5\Programacion III\Tarea 7\code\Tarea7-Vacunas\Pages\Registrar.razor"
using Tarea7_Vacunas.Models;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Registrar")]
    public partial class Registrar : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 88 "C:\Users\alane\OneDrive\Documentos\Clases Semestre 5\Programacion III\Tarea 7\code\Tarea7-Vacunas\Pages\Registrar.razor"
                        private string Cedula_ = "";
                    private string ced = "";
                    private string fallo = "";

                    bdrecursosvacunaContext db = new bdrecursosvacunaContext();
                    private Personas persona = new Personas();
                    private bool agregada = false;
                    private bool newper = true;
                    HttpClient http = new HttpClient();

                    private void CedReal()
                    {

                        ced = Cedula_.Replace("-", "").Replace(" ", "");

                        if (!Vacunacion.Validacion.CedulaValida(ced))
                        {
                            fallo = "La cedula ingresada no es valida o no existe";
                            return;
                        }

                        metCedula();
                    }

                    private void metCedula()
                    {
                        try
                        {
                            persona = db.Personas.Where(x => x.Cedula == ced).First();
                            agregada = true;
                            newper = false;
                            fallo = "";
                        }
                        catch (InvalidOperationException ex)
                        {
                            GetApi();
                        }
                    }

                    public class Informacion
                    {
                        public string Cedula { get; set; }
                        public string Nombres { get; set; }
                        public string Apellido1 { get; set; }
                        public string Apellido2 { get; set; }
                        public string FechaNacimiento { get; set; }
                        public string LugarNacimiento { get; set; }
                        public int IDCategoria { get; set; }
                        public string IdSexo { get; set; }
                        public string IdEstadoCivil { get; set; }
                        public int IdOcupacion { get; set; }
                        public int IDNacionalidad { get; set; }
                        public int IDMunicipio { get; set; }
                        public int IDColegio { get; set; }
                        public object IDCausaCancelacion { get; set; }
                        public string IDEstatus { get; set; }
                        public object EstatusCedulaAzul { get; set; }
                        public object CedulaAnterior { get; set; }
                        public string mun_ced { get; set; }
                        public string seq_ced { get; set; }
                        public string ver_ced { get; set; }
                        public object V2004 { get; set; }
                        public object V2008 { get; set; }
                        public object V2012 { get; set; }
                        public object V2016 { get; set; }
                        public object PLD { get; set; }
                        public object PRD { get; set; }
                        public object PRSC { get; set; }
                        public object PRM { get; set; }
                        public object Multiplicador_NombreCompleto { get; set; }
                        public object Multiplicador_Cedula { get; set; }
                        public object Simpatia_Descripcion { get; set; }
                        public object Ilocalizable { get; set; }
                        public object Apodo { get; set; }
                        public object PadronLF { get; set; }
                        public bool ok { get; set; }
                        public string foto { get; set; }

                    }


                    private async void GetApi()
                    {
                        string api = $"https://api.adamix.net/apec/cedula/{ced}";
                        try
                        {
                            Informacion info = await http.GetFromJsonAsync<Informacion>(api);
                            Validacion(info);
                        }
                        catch (InvalidOperationException ex)
                        {
                            persona = new Personas();
                        }

                        fallo = "";
                        StateHasChanged();
                    }

                    public void Validacion(Informacion info)
                    {
                        string nombre = info.Nombres;
                        string apellido = info.Apellido1 + " " + info.Apellido2;
                        string fechadeNacimiento = info.FechaNacimiento;

                        persona = new Personas
                        {
                            Cedula = Cedula_,
                            Nombre = nombre,
                            Apellido = apellido,
                            FechaNacimiento = Convert.ToDateTime(fechadeNacimiento),


                        };

                    }
                    private void vacunadoValido()
                    {
                        if (newper)
                        {
                            db.Add(persona);
                        }

                        db.SaveChanges();
                    } 

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
